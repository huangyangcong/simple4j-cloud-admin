logging:
    level:
        root: info
# Tomcat
server:
    tomcat:
        uri-encoding: UTF-8
        threads:
            max: 2000
            min-spare: 30
    port: 8091
    servlet:
        context-path: /
        encoding:
            force: true
            force-request: true
            force-response: true
spring:
    devtools:
        restart:
            enabled: true  #设置开启热部署
    #出现错误时, 直接抛出异常(便于异常统一处理，否则捕获不到404)
    mvc:
        throw-exception-if-no-handler-found: true
    web:
        #不要为我们工程中的资源文件建立映射
        resources:
            add-mappings: false
    application:
        version: 1.0
        description: 通用框架
    #redis
    #配置数据源
    datasource:
        druid:
            db-type: com.alibaba.druid.pool.DruidDataSource
            driverClassName: com.mysql.jdbc.Driver
            url: jdbc:mysql://122.51.133.124:30002/simple4j-system?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
            username: root
            password: uY;:rs623ic&
            # 初始连接数
            initial-size: 5
            # 最小连接数
            min-idle: 10
            # 最大连接数
            max-active: 20
            # 获取连接超时时间
            max-wait: 5000
            # 连接有效性检测时间
            time-between-eviction-runs-millis: 60000
            # 连接在池中最小生存的时间
            min-evictable-idle-time-millis: 300000
            # 连接在池中最大生存的时间
            max-evictable-idle-time-millis: 900000
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
            # 检测连接是否有效
            validation-query: select 1
            # 配置监控统计
            webStatFilter:
                enabled: true
            stat-view-servlet:
                enabled: true
                url-pattern: /druid/*
                reset-enable: false
            filter:
                stat:
                    enabled: true
                    # 记录慢SQL
                    log-slow-sql: true
                    slow-sql-millis: 1000
                    merge-sql: true
                wall:
                    config:
                        multi-statement-allow: true
    redis:
        database: 0
        host: 122.51.133.124
        port: 30003
        password: 123456
        # 连接超时时间（记得添加单位，Duration）
        timeout: 10000ms
        # Redis默认情况下有16个分片，这里配置具体使用的分片
        # database: 0
        lettuce:
            pool:
                # 连接池最大连接数（使用负值表示没有限制） 默认 8
                max-active: 8
                # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
                max-wait: -1ms
                # 连接池中的最大空闲连接 默认 8
                max-idle: 8
                # 连接池中的最小空闲连接 默认 0
                min-idle: 0
#mybatis
mybatis-plus:
    mapper-locations: classpath*:mapper/*.xml
    #实体扫描，多个package用逗号或者分号分隔
    typeAliasesPackage: com.simple4j.auth.entity
    global-config:
        db-config:
            #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
            id-type: assign_id
            #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
            field-strategy: 2
            #驼峰下划线转换
            db-column-underline: true
            #刷新mapper 调试神器
            refresh-mapper: true
            #数据库大写下划线转换
            #capital-mode: true
            # Sequence序列接口实现类配置
            #key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
            #逻辑删除配置
            logic-delete-value: 0
            logic-not-delete-value: -1
            #自定义填充策略接口实现
            #    meta-object-handler: com.baomidou.springboot.xxx
            #自定义SQL注入器
        #    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    configuration:
        map-underscore-to-camel-case: true
        cache-enabled: false
        call-setters-on-nulls: true
# ums core
ums:
    # ================ 第三方授权登录相关配置 ================
    oauth:
        # 是否支持第三方授权登录功能, 默认: true
        enabled: true
        # 抑制反射警告, 支持 JDK11, 默认: false , 在确认 WARNING: An illegal reflective access operation has occurred 安全后, 可以打开此设置, 可以抑制反射警告.
        suppress-reflect-warning: true
        # 第三方服务商: providerId, 支持所有 JustAuth 支持的第三方授权登录, 目前有 32 家第三方授权登录
        github:
            # 根据是否有设置 clientId 来动态加载相应 JustAuth 的 AuthXxxRequest
            client-id: 4d4ee00e82f669f2ea8d
            client-secret: 953ddbe871a08d6924053531e89ecc01d87195a8
        gitee:
            client-id: dcc38c801ee88f43cfc1d5c52ec579751c12610c37b87428331bd6694056648e
            client-secret: e60a110a2f6e7c930c2d416f802bec6061e19bfa0ceb0df9f6b182b05d8f5a58
        # 第三方登录授权登录 url 前缀, 不包含 ServletContextPath，默认为 /auth2/authorization.
        auth-login-url-prefix: /auth2/authorization
        # 第三方登录回调处理 url 前缀 ，也就是 RedirectUrl 的前缀, 不包含 ServletContextPath，默认为 /auth2/login.
        redirect-url-prefix: /auth2/login
        # 第三方登录回调的域名, 例如：http://localhost:9090 默认为 "http://127.0.0.1"，
        # redirectUrl 直接由 {domain}/{servletContextPath}/{redirectUrlPrefix}/{providerId}(ums.oauth.[qq/gitee/weibo])组成
        domain: http://localhost:9090
        # 第三方授权登录成功后的默认权限, 多个权限用逗号分开, 默认为: "ROLE_USER"
        default-authorities: ROLE_USER

        # 用于 JustAuth 的代理(HttpClient)设置
        proxy:
            # 用于国内代理(HttpClient)超时, 默认 PT3S
            timeout: PT3S
            # 用于国外网站代理(HttpClient)超时, 默认 PT15S
            foreign-timeout: PT150S
# 登录相关配置
login:
    # 登录缓存
    cache-enable: true
    #  是否限制单用户登录
    single: false
    #  验证码
    login-code:
        #  验证码类型配置 查看 LoginProperties 类
        code-type: arithmetic
        #  登录图形验证码有效时间/分钟
        expiration: 2
        #  验证码高度
        width: 111
        #  验证码宽度
        heigth: 36
        # 内容长度
        length: 2

#jwt
jwt:
    header: Token
    # 令牌前缀
    token-start-with: Bearer
    # 必须使用最少88位的Base64对该令牌进行编码
    base64-secret: ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODVkZDU5Y2Y3OGYwZWE1NzUzNWQ2YjFjZDc0NGMxZWU2MmQ3MjY1NzJmNTE0MzI=
    # 令牌过期时间 此处单位/毫秒 ，默认4小时，可在此网站生成 https://www.convertworld.com/zh-hans/time/milliseconds.html
    token-validity-in-seconds: 14400000
    # 在线用户key
    online-key: online-token-
    # 验证码
    code-key: code-key-
    # token 续期检查时间范围（默认30分钟，单位毫秒），在token即将过期的一段时间内用户操作了，则给用户的token续期
    detect: 1800000
    # 续期时间范围，默认1小时，单位毫秒
    renew: 3600000

#是否允许生成代码，生产环境设置为false
generator:
    enabled: true

#是否开启 swagger-ui
swagger:
    enabled: true

# IP 本地解析
ip:
    local-parsing: true
task:
    pool:
        # 核心线程池大小
        core-pool-size: 10
        # 最大线程数
        max-pool-size: 30
        # 活跃时间
        keep-alive-seconds: 60
        # 队列容量
        queue-capacity: 50

#七牛云
qiniu:
    # 文件大小 /M
    max-size: 15

#邮箱验证码有效时间/秒
code:
    expiration: 300

#密码加密传输，前端公钥加密，后端私钥解密
rsa:
    private_key: MIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEA0vfvyTdGJkdbHkB8mp0f3FE0GYP3AYPaJF7jUd1M0XxFSE2ceK3k2kw20YvQ09NJKk+OMjWQl9WitG9pB6tSCQIDAQABAkA2SimBrWC2/wvauBuYqjCFwLvYiRYqZKThUS3MZlebXJiLB+Ue/gUifAAKIg1avttUZsHBHrop4qfJCwAI0+YRAiEA+W3NK/RaXtnRqmoUUkb59zsZUBLpvZgQPfj1MhyHDz0CIQDYhsAhPJ3mgS64NbUZmGWuuNKp5coY2GIj/zYDMJp6vQIgUueLFXv/eZ1ekgz2Oi67MNCk5jeTF2BurZqNLR3MSmUCIFT3Q6uHMtsB9Eha4u7hS31tj1UWE+D+ADzp59MGnoftAiBeHT7gDMuqeJHPL4b+kC+gzV4FGTfhR9q3tTbklZkD2A==

# sm.ms 图床的 token
smms:
    token: 1oOP3ykFDI0K6ifmtvU7c8Y1eTWZSlyl

sample:
    jwe-key-value: classpath:simple.priv`
justauth:
    enabled: true
    type:
        QQ:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/qq/callback
            union-id: false
        WEIBO:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/weibo/callback
        GITEE:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/gitee/callback
        DINGTALK:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/dingtalk/callback
        BAIDU:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/baidu/callback
        CSDN:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/csdn/callback
        CODING:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/coding/callback
            coding-group-name: xx
        OSCHINA:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/oschina/callback
        ALIPAY:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/alipay/callback
            alipay-public-key: MIIB**************DAQAB
        WECHAT_OPEN:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/wechat_open/callback
        WECHAT_MP:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/wechat_mp/callback
        WECHAT_ENTERPRISE:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/wechat_enterprise/callback
            agent-id: 1000002
        TAOBAO:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/taobao/callback
        GOOGLE:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/google/callback
        FACEBOOK:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/facebook/callback
        DOUYIN:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/douyin/callback
        LINKEDIN:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/linkedin/callback
        MICROSOFT:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/microsoft/callback
        MI:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/mi/callback
        TOUTIAO:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/toutiao/callback
        TEAMBITION:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/teambition/callback
        RENREN:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/renren/callback
        PINTEREST:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/pinterest/callback
        STACK_OVERFLOW:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/stack_overflow/callback
            stack-overflow-key: asd*********asd
        HUAWEI:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/huawei/callback
        KUJIALE:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/kujiale/callback
        GITLAB:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/gitlab/callback
        MEITUAN:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/meituan/callback
        ELEME:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/eleme/callback
        TWITTER:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/twitter/callback
        XMLY:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/xmly/callback
            # 设备唯一标识ID
            device-id: xxxxxxxxxxxxxx
            # 客户端操作系统类型，1-iOS系统，2-Android系统，3-Web
            client-os-type: 3
            # 客户端包名，如果 clientOsType 为1或2时必填。对Android客户端是包名，对IOS客户端是Bundle ID
            #pack-id: xxxx
        FEISHU:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/feishu/callback
        JD:
            client-id: 10**********6
            client-secret: 1f7d08**********5b7**********29e
            redirect-uri: http://oauth.xkcoding.com/demo/oauth/jd/callback
    cache:
        type: redis
        # 缓存前缀，目前只对redis缓存生效，默认 JUSTAUTH::STATE::
        prefix: ''
        # 超时时长，目前只对redis缓存生效，默认3分钟
        timeout: 1h
# Sa-Token配置
sa-token:
    # token名称 (同时也是cookie名称)
    token-name: satoken
    # token有效期，单位s 默认30天, -1代表永不过期
    timeout: 2592000
    # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
    activity-timeout: -1
    # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
    is-concurrent: true
    # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
    is-share: false
    # token风格
    token-style: uuid
    # 是否输出操作日志
    is-log: false
