#set($responsePackage=$package.Entity.replace("entity","response"))
package $!{responsePackage};


    #if($!{entityLombokModel})
    import lombok.Data;
    #end
    #if($!{swagger2})
    import io.swagger.annotations.ApiModel;
    import io.swagger.annotations.ApiModelProperty;
    #end
    #if($!{cfg.tree})
    import com.fasterxml.jackson.annotation.JsonIgnore;
    import com.newdex.dao.util.INode;
    #end
import java.io.Serializable;
import java.util.Date;

import com.fasterxml.jackson.annotation.JsonProperty;
    #set($requestPackage=$package.Entity.replace("entity","request"))
import $!{requestPackage}.$!{entity}AddOrUpdateRequest;

/**
 * $!{table.comment}详情响应实体类
 *
 * @author $!{author}
 * @since $!{date}
 */
    #if($!{entityLombokModel})
    @Data
    #end
    #if($!{swagger2})
    @ApiModel(value = "$!{table.comment}详情响应实体类", description = "$!{table.comment}详情响应实体类")
    #end
    #if($!{cfg.tree})
    public class $!{entity}DetailResponse extends $!{entity}AddOrUpdateRequest implements
            INode<$!{entity}DetailResponse,
                    Long> {
    #else
    public class $!{entity}DetailResponse extends $!{entity}AddOrUpdateRequest implements
            Serializable {

        private static final long serialVersionUID = 1L;
    #end

    ## ----------  BEGIN 字段循环遍历  ----------
    #foreach($field in $!{table.commonFields})
        #if($!{field.name}!=$!{cfg.tenantColumn} && $!{logicDeleteFieldName}!=$!{field.name} &&
            $!{versionFieldName}!=$!{field.name} && !$!{field.keyFlag})
            #if($!{field.keyFlag})
                #set($keyPropertyName=$!{field.propertyName})
            #end
            #if("$!field.comment" != "")
                /**
                 * $!{field.comment}
                 */
                #if($!{swagger2})
                @ApiModelProperty(name = "$!{field.name}", value = "$!{field.comment}")
                #end
                #if($!{cfg.jackson})
                @JsonProperty("$!{field.name}")
                #end
            #end
        private $!{field.propertyType} $!{field.propertyName};
        #end
    #end
    ## ----------  END 字段循环遍历  ----------

    #if(!$!{entityLombokModel})
        #foreach($field in $!{table.commonFields})
            #if($!{field.propertyType.equals("boolean")})
                #set($getprefix="is")
            #else
                #set($getprefix="get")
            #end

            public $!{field.propertyType} $!{getprefix}$!{field.capitalName}() {
            return $!{field.propertyName};
        }

            #if($!{entityBuilderModel})
            public $!{entity} set$!{field.capitalName}($!{field.propertyType} $!{field.propertyName}) {
            #else
                public void set$!{field.capitalName}
                ($!{field.propertyType} $!{field.propertyName}) {
            #end
            this.$!{field.propertyName} = $!{field.propertyName};
            #if($!{entityBuilderModel})
                return this;
            #end
        }
        #end
    #end


    #if($!{cfg.tree})
        /**
     * 子孙节点
     */
        private List<$!{entity}DetailResponse> children;

        @Override
        public void addChildren($!{entity}DetailResponse children) {
        if (this.children == null) {
            this.children = new ArrayList<>();
        }
        this.children.add(children);
    }
        @JsonIgnore
        @Override
        public Long getTid() {
        return getId();
    }

        @JsonIgnore
        @Override
        public Long getTParentId() {
        return getParentId();
    }

        @Override
        public int compareTo($!{entity}DetailResponse o) {
        if (o.getSort().equals(this.getSort())) {
            return 0;
        } else if (o.getSort() > this.getSort()) {
            return -1;
        } else {
            return 1;
        }
    }
    #end
}
